<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="chen.example.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="chen.example.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_account" property="userAccount" jdbcType="VARCHAR" />
    <result column="user_passwd" property="userPasswd" jdbcType="VARCHAR" />
    <result column="user_salt" property="userSalt" jdbcType="VARCHAR" />
    <result column="user_smt_create" property="userSmtCreate" jdbcType="TIMESTAMP" />
    <result column="user_smt_modified" property="userSmtModified" jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_account, user_passwd, user_salt, user_smt_create, user_smt_modified
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="chen.example.entity.example.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="chen.example.entity.example.UserExample" >
    delete from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="chen.example.entity.User" >
    insert into t_user (id, user_account, user_passwd, 
      user_salt, user_smt_create, user_smt_modified
      )
    values (#{id,jdbcType=INTEGER}, #{userAccount,jdbcType=VARCHAR}, #{userPasswd,jdbcType=VARCHAR}, 
      #{userSalt,jdbcType=VARCHAR}, #{userSmtCreate,jdbcType=TIMESTAMP}, #{userSmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="chen.example.entity.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userAccount != null" >
        user_account,
      </if>
      <if test="userPasswd != null" >
        user_passwd,
      </if>
      <if test="userSalt != null" >
        user_salt,
      </if>
      <if test="userSmtCreate != null" >
        user_smt_create,
      </if>
      <if test="userSmtModified != null" >
        user_smt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userAccount != null" >
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userPasswd != null" >
        #{userPasswd,jdbcType=VARCHAR},
      </if>
      <if test="userSalt != null" >
        #{userSalt,jdbcType=VARCHAR},
      </if>
      <if test="userSmtCreate != null" >
        #{userSmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="userSmtModified != null" >
        #{userSmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="chen.example.entity.example.UserExample" resultType="java.lang.Integer" >
    select count(*) from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userAccount != null" >
        user_account = #{record.userAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.userPasswd != null" >
        user_passwd = #{record.userPasswd,jdbcType=VARCHAR},
      </if>
      <if test="record.userSalt != null" >
        user_salt = #{record.userSalt,jdbcType=VARCHAR},
      </if>
      <if test="record.userSmtCreate != null" >
        user_smt_create = #{record.userSmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userSmtModified != null" >
        user_smt_modified = #{record.userSmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_user
    set id = #{record.id,jdbcType=INTEGER},
      user_account = #{record.userAccount,jdbcType=VARCHAR},
      user_passwd = #{record.userPasswd,jdbcType=VARCHAR},
      user_salt = #{record.userSalt,jdbcType=VARCHAR},
      user_smt_create = #{record.userSmtCreate,jdbcType=TIMESTAMP},
      user_smt_modified = #{record.userSmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="chen.example.entity.User" >
    update t_user
    <set >
      <if test="userAccount != null" >
        user_account = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userPasswd != null" >
        user_passwd = #{userPasswd,jdbcType=VARCHAR},
      </if>
      <if test="userSalt != null" >
        user_salt = #{userSalt,jdbcType=VARCHAR},
      </if>
      <if test="userSmtCreate != null" >
        user_smt_create = #{userSmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="userSmtModified != null" >
        user_smt_modified = #{userSmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="chen.example.entity.User" >
    update t_user
    set user_account = #{userAccount,jdbcType=VARCHAR},
      user_passwd = #{userPasswd,jdbcType=VARCHAR},
      user_salt = #{userSalt,jdbcType=VARCHAR},
      user_smt_create = #{userSmtCreate,jdbcType=TIMESTAMP},
      user_smt_modified = #{userSmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>